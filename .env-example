# Environment variables for CCaaS API
# These variables are validated by src/env/index.ts

# =============================================================================
# NODE ENVIRONMENT
# =============================================================================
# Set to 'dev' for local development, 'production' for Docker/production
# Valid values: 'dev', 'test', 'production'
NODE_ENV=dev

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================
# Server port (default: 3333)
PORT=3333

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database credentials
POSTGRES_USER=your_db_user
POSTGRES_PASSWORD=your_db_password
POSTGRES_DATABASE=your_db_name

# Database connection URL
# For DEVELOPMENT (local database):
# DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DATABASE}?schema=public
#
# For PRODUCTION (Docker Compose):
# DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DATABASE}?schema=public
#
# For TESTING:
# DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DATABASE}_test?schema=public

# Development configuration (uncomment for local development)
DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@localhost:5432/${POSTGRES_DATABASE}?schema=public

# Production configuration (uncomment for Docker/production)
# DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DATABASE}?schema=public

# =============================================================================
# USAGE INSTRUCTIONS
# =============================================================================
# 
# 1. DEVELOPMENT SETUP:
#    - Copy this file to .env
#    - Set NODE_ENV=dev
#    - Use localhost in DATABASE_URL
#    - Run database locally or via Docker: docker-compose up db
#    - Run migrations: npm run prisma:migrate
#    - Run seed: npm run seed
#    - Start app: npm run dev
#
# 2. PRODUCTION SETUP (Docker):
#    - Copy this file to .env
#    - Set NODE_ENV=production
#    - Use 'db' as host in DATABASE_URL
#    - Run: docker-compose up --build
#
# 3. TESTING SETUP:
#    - Copy this file to .env.test
#    - Set NODE_ENV=test
#    - Use separate test database
#    - Run: npm test